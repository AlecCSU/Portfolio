#include <iostream>
#include <chrono>  // Only for delay simulation

void delay(int milliseconds) {
    auto start = std::chrono::high_resolution_clock::now();
    while (std::chrono::duration_cast<std::chrono::milliseconds>(std::chrono::high_resolution_clock::now() - start).count() < milliseconds) {
        // Busy-wait loop to simulate delay
    }
}

void countUp() {
    for (int i = 1; i <= 20; ++i) {
        std::cout << "Counting Up: " << i << std::endl;
        delay(100);  // Simulated delay for demonstration
    }
}

void countDown() {
    for (int i = 20; i >= 0; --i) {
        std::cout << "Counting Down: " << i << std::endl;
        delay(100);  // Simulated delay for demonstration
    }
}

int main() {
    countUp();     // Count up first
    countDown();   // Then count down

    return 0;
}

